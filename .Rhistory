版 <- llply(集, function(迭) {
牍 = 迭[[1]][rowMeans(is.na(迭[[1]])) < 0.5,]
names(牍) = gsub('海南省:万宁市|海南省:东方市|大理州:鹤庆县|阿坝市:若尔盖县|阿坝市:茂县|滨州市:邹平县|澳门|海南省:陵水县|大理州:漾濞县|漳州:诏安县|荆州市:沙市区|烟台市:蓬莱市|大理州:祥云县|大理州:永平县|海南省:琼中县|大理州:洱源县|永州市:祁阳县|阿拉善:|海南省:琼海市|大理州:弥渡县|海南省:澄迈县|大理州市:祥云县|阿拉善|漳州:漳浦县|市:|泉州:泉港区|泉州:洛江区|海南省:文昌市|济南济阳县|海南省:保亭县|海南省:五指山市|大理州:南涧县|海南省:屯昌县|大理州:大理市|大理州:宾川县|泉州:德化县|省:|台湾|香港|大理州:剑川县|大理州:云龙县|龙岩:漳平市|大理州:巍山县|泉州:鲤城区|恩施州:来凤县|恩施州:巴东县|合肥经济技术开发区|延边:龙井', '', names(牍))
names(牍) = gsub('海南白沙县|泉州:惠安县|恩施州:恩施市|南平:建瓯市|泉州:安溪县|恩施州:咸丰县|塔城:和布克赛尔县|建德市|敦煌市|吉林龙潭区:|吴忠红寺堡:|塔城:和布克赛尔县|泉州:南安市|海南乐东县|昌吉:奇台县|巴州:和静县:|巴州:和静县|南平:政和县|昌吉:呼图壁县|南平:政和县|泉州:永春县|恩施州:建始县|余姚市|荆门京山县:|博州:精河县|泉州:石狮市|林区|湘西泸溪县|济南济阳县|安宁区|兴安:|海南州:兴海县|广州增城市|海南临高县', '', names(牍))
names(牍) = gsub('^:|^市|^省|普通|^年末|^群岛', '', names(牍))
牍[grep('万', names(牍))] <- round(牍[grep('万', names(牍))] * 10000)
names(牍) <- gsub('\\(万+.*)|\\(人)', '', names(牍))
牍[grep('千', names(牍))] <- round(牍[grep('千', names(牍))] * 1000)
names(牍) <- gsub('\\(千+.*)|\\(人)', '', names(牍))
names(牍) <- gsub('(^人民币+.*(亿元))', '\\1（亿人民币）', names(牍))
names(牍) <- gsub('\\(亿元|)$', '', names(牍))
names(牍) <- gsub('\\(美元\\)|美元\\(', '', names(牍))
names(牍) <- gsub('\\(百万吨油当量|\\(百万吨', '（百万吨）', names(牍))
names(牍) <- gsub('\\(\\%|\\(\\‰', '（百分比）', names(牍))
names(牍) <- gsub('\\(十亿桶', '（十亿桶）', names(牍))
names(牍) <- gsub('\\(吨', '（吨）', names(牍))
names(牍) <- gsub('\\(元', '（元）', names(牍))
names(牍) <- gsub('\\(吨', '（吨）', names(牍))
names(牍) <- gsub('\\(亿美元', '（亿美元）', names(牍))
names(牍) <- gsub('\\/人|\\(辆|\\(张| 55056', '', names(牍))
names(牍) <- gsub(':', '：', names(牍))
names(牍) <- gsub('\\(美元', '（美元）', names(牍))
names(牍) <- gsub('：：', '：', names(牍))
names(牍) <- gsub('^人民币', '', names(牍))
names(牍) <- gsub('中国实际使用外资金额', '外资实货量', names(牍))
names(牍) <- gsub('GDP|GDP：', '钱谷', names(牍))
names(牍) <- gsub('\\(个|\\(所：', '', names(牍))
牍
}) %>% plyr::ldply() %>% as_tibble()
names(版)
版 %>% select(contains('钱谷'))
版 %>% select(contain('钱谷'))
版[grep('钱谷')]
args(grep)
版[grep('钱谷',  names(版))]
版 <- llply(集, function(迭) {
牍 = 迭[[1]][rowMeans(is.na(迭[[1]])) < 0.5,]
names(牍) = gsub('海南省:万宁市|海南省:东方市|大理州:鹤庆县|阿坝市:若尔盖县|阿坝市:茂县|滨州市:邹平县|澳门|海南省:陵水县|大理州:漾濞县|漳州:诏安县|荆州市:沙市区|烟台市:蓬莱市|大理州:祥云县|大理州:永平县|海南省:琼中县|大理州:洱源县|永州市:祁阳县|阿拉善:|海南省:琼海市|大理州:弥渡县|海南省:澄迈县|大理州市:祥云县|阿拉善|漳州:漳浦县|市:|泉州:泉港区|泉州:洛江区|海南省:文昌市|济南济阳县|海南省:保亭县|海南省:五指山市|大理州:南涧县|海南省:屯昌县|大理州:大理市|大理州:宾川县|泉州:德化县|省:|台湾|香港|大理州:剑川县|大理州:云龙县|龙岩:漳平市|大理州:巍山县|泉州:鲤城区|恩施州:来凤县|恩施州:巴东县|合肥经济技术开发区|延边:龙井', '', names(牍))
names(牍) = gsub('海南白沙县|泉州:惠安县|恩施州:恩施市|南平:建瓯市|泉州:安溪县|恩施州:咸丰县|塔城:和布克赛尔县|建德市|敦煌市|吉林龙潭区:|吴忠红寺堡:|塔城:和布克赛尔县|泉州:南安市|海南乐东县|昌吉:奇台县|巴州:和静县:|巴州:和静县|南平:政和县|昌吉:呼图壁县|南平:政和县|泉州:永春县|恩施州:建始县|余姚市|荆门京山县:|博州:精河县|泉州:石狮市|林区|湘西泸溪县|济南济阳县|安宁区|兴安:|海南州:兴海县|广州增城市|海南临高县', '', names(牍))
names(牍) = gsub('^:|^市|^省|普通|^年末|^群岛', '', names(牍))
牍[grep('万', names(牍))] <- round(牍[grep('万', names(牍))] * 10000)
names(牍) <- gsub('\\(万+.*)|\\(人)', '', names(牍))
牍[grep('千', names(牍))] <- round(牍[grep('千', names(牍))] * 1000)
names(牍) <- gsub('\\(千+.*)|\\(人)', '', names(牍))
names(牍) <- gsub('(^人民币+.*(亿元))', '\\1（亿人民币）', names(牍))
names(牍) <- gsub('\\(亿元|)$', '', names(牍))
names(牍) <- gsub('\\(美元\\)|美元\\(', '', names(牍))
names(牍) <- gsub('\\(百万吨油当量|\\(百万吨', '（百万吨）', names(牍))
names(牍) <- gsub('\\(\\%|\\(\\‰', '（百分比）', names(牍))
names(牍) <- gsub('\\(十亿桶', '（十亿桶）', names(牍))
names(牍) <- gsub('\\(吨', '（吨）', names(牍))
names(牍) <- gsub('\\(元', '（元）', names(牍))
names(牍) <- gsub('\\(吨', '（吨）', names(牍))
names(牍) <- gsub('\\(亿美元', '（亿美元）', names(牍))
names(牍) <- gsub('\\/人|\\(辆|\\(张| 55056', '', names(牍))
names(牍) <- gsub(':', '：', names(牍))
names(牍) <- gsub('\\(美元', '（美元）', names(牍))
names(牍) <- gsub('：：', '：', names(牍))
names(牍) <- gsub('^人民币', '', names(牍))
names(牍) <- gsub('中国实际使用外资金额', '外资实货量', names(牍))
names(牍) <- gsub('GDP|GDP：', '钱谷', names(牍))
names(牍) <- gsub('\\(个|\\(所：', '', names(牍))
names(牍) <- gsub('\\(亿\\)', '（亿）', names(牍))
names(牍) <- gsub('\\(个：', '', names(牍))
names(牍) <- gsub('\\(所：', '', names(牍))
names(牍) <- gsub('\\(港元', '（港元）', names(牍))
names(牍) <- gsub('\\(百万港元', '（百万港元）', names(牍))
牍
}) %>% plyr::ldply() %>% as_tibble()
版[grep('钱谷',  names(版))]
版[grep('钱谷',  names(版))] %>% na.omit
版$`人均钱谷(本币)(欧元`
unique(版$`人均钱谷(本币)(欧元`)
版[grep('钱谷',  names(版))] %>% unique
unique(版$`钱谷增长率（百分比)`)
unique(版$`钱谷增长率（百分比）`)
tail(版[grep('钱谷',  names(版))])
tail(版[grep('钱谷',  names(版))])
tail(版[grep('钱谷',  names(版))], 100)
data.frame(版[grep('钱谷',  names(版))], 100)
data.frame(版[grep('钱谷',  names(版))])
tail(data.frame(版[grep('钱谷',  names(版))]))
tail(data.frame(版[grep('钱谷',  names(版))]), 100)
head(data.frame(版[grep('钱谷',  names(版))]), 101:200)
data.frame(版[grep('钱谷',  names(版))][101:200,]
)
data.frame(版[grep('钱谷',  names(版))])[101:200,]
data.frame(版[grep('钱谷',  names(版))])[201:300,]
data.frame(版[grep('钱谷',  names(版))])[2001:3000,]
data.frame(版[grep('钱谷',  names(版))])[3001:4000,]
版[grep('钱谷',  names(版))]
data.frame(版[grep('钱谷',  names(版))])[10001:13000,]
data.frame(版[grep('钱谷',  names(版))])[14001:15000,]
data.frame(版[grep('钱谷',  names(版))])[15001:16000,]
data.frame(版[grep('钱谷',  names(版))])[25001:26000,]
data.frame(版[grep('钱谷',  names(版))])[35001:36000,]
data.frame(版[grep('钱谷',  names(版))])[38001:38000,]
data.frame(版[grep('钱谷',  names(版))])[38001:39000,]
版[grep('钱谷',  names(版))][!is.na(版[grep('钱谷',  names(版))])]
版[!is.na(版[grep('钱谷',  names(版))])]
版[grep('钱谷',  names(版))][!is.na(版[grep('钱谷',  names(版))]),]
版[grep('钱谷',  names(版)) && !is.na(版[grep('钱谷',  names(版))]),]
版[!is.na(版[grep('钱谷',  names(版))]),]
版[!is.na(版[grep('钱谷',  names(版))])]
版[grep('钱谷',  names(版))]
grep('钱谷',  names(版))
grepl('钱谷',  names(版))
grep('钱谷',  names(版), value = TRUE)
版[c("钱谷", "人均钱谷（元）", "钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）"]
版[c("钱谷", "人均钱谷（元）", "钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")]
!is.na(版[c("钱谷", "人均钱谷（元）", "钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")])
版[c("钱谷", "人均钱谷（元）", "钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")]
版[!is.na(版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")])]
!is.na(版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")])
版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")][!is.na(版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")])] #"钱谷", "人均钱谷（元）",
版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% filter_all(!is.na) #"钱谷", "人均钱谷（元）",
??filter_na
all_vars(is.na(.))
版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% all_vars(is.na(.)) #"钱谷", "人均钱谷（元）",
版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% any_vars(is.na(.)) #"钱谷", "人均钱谷（元）",
?is.na.data.frame
版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% filter(!is.na("人均钱谷(本币)(欧元")) #"钱谷", "人均钱谷（元）",
版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% dplyr::filter(!is.na("人均钱谷(本币)(欧元")) #"钱谷", "人均钱谷（元）",
版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% drop_na_dt #"钱谷", "人均钱谷（元）",
版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% drop_na #"钱谷", "人均钱谷（元）",
conflicted::conflicts_prefer(tidyft::drop_na)
版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% drop_na #"钱谷", "人均钱谷（元）",
版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% dplyr::filter(!is.na(`人均钱谷(本币)(欧元`)) #"钱谷", "人均钱谷（元）",
版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% dplyr::filter(!is.na(`人均钱谷(本币)(欧元`)) #"钱谷", "人均钱谷（元）",
版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% dplyr::filter(!is.na(`人均钱谷(本币)(欧元`) & !is.na(人均钱谷美元)) #"钱谷", "人均钱谷（元）",
版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% dplyr::filter(!is.na(`人均钱谷(本币)(欧元`) && !is.na(人均钱谷美元)) #"钱谷", "人均钱谷（元）",
版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% dplyr::filter(!(is.na(`人均钱谷(本币)(欧元`) & is.na(人均钱谷美元))) #"钱谷", "人均钱谷（元）",
版[c("钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% dplyr::filter(!(is.na(`钱谷增长率（百分比）`) & is.na(`人均钱谷美元`) & is.na(`钱谷百万美元`) & is.na(`人均钱谷现价（港元）`) & is.na(`钱谷现价（百万港元）`) & is.na(`工业增加值占钱谷比重（百分比）`) & is.na(`人均钱谷(购买力平价)(国际元`) & is.na(`人均钱谷（美元）`) & is.na(`钱谷非公有制经济`) & is.na(`人均钱谷(本币)(欧元`) & is.na(`服务业增加值占钱谷比重（百分比）`) & is.na(`钱谷工业`) & is.na(`钱谷占世界比重（百分比）`))) #"钱谷", "人均钱谷（元）",
版[c("钱谷", "人均钱谷（元）", "钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% dplyr::filter(!(is.na(`钱谷增长率（百分比）`) & is.na(`人均钱谷美元`) & is.na(`钱谷百万美元`) & is.na(`人均钱谷现价（港元）`) & is.na(`钱谷现价（百万港元）`) & is.na(`工业增加值占钱谷比重（百分比）`) & is.na(`人均钱谷(购买力平价)(国际元`) & is.na(`人均钱谷（美元）`) & is.na(`钱谷非公有制经济`) & is.na(`人均钱谷(本币)(欧元`) & is.na(`服务业增加值占钱谷比重（百分比）`) & is.na(`钱谷工业`) & is.na(`钱谷占世界比重（百分比）`)))
版[c("钱谷", "人均钱谷（元）", "钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% dplyr::filter(!(is.na(`钱谷增长率（百分比）`) & is.na(`人均钱谷美元`) & is.na(`钱谷百万美元`) & is.na(`人均钱谷现价（港元）`) & is.na(`钱谷现价（百万港元）`) & is.na(`工业增加值占钱谷比重（百分比）`) & is.na(`人均钱谷(购买力平价)(国际元`) & is.na(`人均钱谷（美元）`) & is.na(`钱谷非公有制经济`) & is.na(`人均钱谷(本币)(欧元`) & is.na(`服务业增加值占钱谷比重（百分比）`) & is.na(`钱谷工业`) & is.na(`钱谷占世界比重（百分比）`))) %>% tail(100)
版[c("钱谷", "人均钱谷（元）", "钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% dplyr::filter(!(is.na(`钱谷增长率（百分比）`) & is.na(`人均钱谷美元`) & is.na(`钱谷百万美元`) & is.na(`人均钱谷现价（港元）`) & is.na(`钱谷现价（百万港元）`) & is.na(`工业增加值占钱谷比重（百分比）`) & is.na(`人均钱谷(购买力平价)(国际元`) & is.na(`人均钱谷（美元）`) & is.na(`钱谷非公有制经济`) & is.na(`人均钱谷(本币)(欧元`) & is.na(`服务业增加值占钱谷比重（百分比）`) & is.na(`钱谷工业`) & is.na(`钱谷占世界比重（百分比）`))) %>% tail(100)
版[c("钱谷", "人均钱谷（元）", "钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% dplyr::filter(!(is.na(`钱谷增长率（百分比）`) & is.na(`人均钱谷美元`) & is.na(`钱谷百万美元`) & is.na(`人均钱谷现价（港元）`) & is.na(`钱谷现价（百万港元）`) & is.na(`工业增加值占钱谷比重（百分比）`) & is.na(`人均钱谷(购买力平价)(国际元`) & is.na(`人均钱谷（美元）`) & is.na(`钱谷非公有制经济`) & is.na(`人均钱谷(本币)(欧元`) & is.na(`服务业增加值占钱谷比重（百分比）`) & is.na(`钱谷工业`) & is.na(`钱谷占世界比重（百分比）`))) %>% data.frame %>% tail(100)
版[c("钱谷", "人均钱谷（元）", "钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% dplyr::filter(!(is.na(`钱谷增长率（百分比）`) & is.na(`人均钱谷美元`) & is.na(`钱谷百万美元`) & is.na(`人均钱谷现价（港元）`) & is.na(`钱谷现价（百万港元）`) & is.na(`工业增加值占钱谷比重（百分比）`) & is.na(`人均钱谷(购买力平价)(国际元`) & is.na(`人均钱谷（美元）`) & is.na(`钱谷非公有制经济`) & is.na(`人均钱谷(本币)(欧元`) & is.na(`服务业增加值占钱谷比重（百分比）`) & is.na(`钱谷工业`) & is.na(`钱谷占世界比重（百分比）`))) %>% data.frame %>% .[1000:1100,]
版[c("钱谷", "人均钱谷（元）", "钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% dplyr::filter(!(is.na(`钱谷增长率（百分比）`) & is.na(`人均钱谷美元`) & is.na(`钱谷百万美元`) & is.na(`人均钱谷现价（港元）`) & is.na(`钱谷现价（百万港元）`) & is.na(`工业增加值占钱谷比重（百分比）`) & is.na(`人均钱谷(购买力平价)(国际元`) & is.na(`人均钱谷（美元）`) & is.na(`钱谷非公有制经济`) & is.na(`人均钱谷(本币)(欧元`) & is.na(`服务业增加值占钱谷比重（百分比）`) & is.na(`钱谷工业`) & is.na(`钱谷占世界比重（百分比）`))) %>% data.frame %>% .[2000:2200,]
版[c("钱谷", "人均钱谷（元）", "钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% dplyr::filter(!(is.na(`钱谷增长率（百分比）`) & is.na(`人均钱谷美元`) & is.na(`钱谷百万美元`) & is.na(`人均钱谷现价（港元）`) & is.na(`钱谷现价（百万港元）`) & is.na(`工业增加值占钱谷比重（百分比）`) & is.na(`人均钱谷(购买力平价)(国际元`) & is.na(`人均钱谷（美元）`) & is.na(`钱谷非公有制经济`) & is.na(`人均钱谷(本币)(欧元`) & is.na(`服务业增加值占钱谷比重（百分比）`) & is.na(`钱谷工业`) & is.na(`钱谷占世界比重（百分比）`))) %>% data.frame %>% .[3000:3200,]
版[c("钱谷", "人均钱谷（元）", "钱谷增长率（百分比）", "人均钱谷美元", "钱谷百万美元", "人均钱谷现价（港元）", "钱谷现价（百万港元）", "工业增加值占钱谷比重（百分比）", "人均钱谷(购买力平价)(国际元", "人均钱谷（美元）", "钱谷非公有制经济", "人均钱谷(本币)(欧元", "服务业增加值占钱谷比重（百分比）", "钱谷工业", "钱谷占世界比重（百分比）")] %>% dplyr::filter(!(is.na(`钱谷增长率（百分比）`) & is.na(`人均钱谷美元`) & is.na(`钱谷百万美元`) & is.na(`人均钱谷现价（港元）`) & is.na(`钱谷现价（百万港元）`) & is.na(`工业增加值占钱谷比重（百分比）`) & is.na(`人均钱谷(购买力平价)(国际元`) & is.na(`人均钱谷（美元）`) & is.na(`钱谷非公有制经济`) & is.na(`人均钱谷(本币)(欧元`) & is.na(`服务业增加值占钱谷比重（百分比）`) & is.na(`钱谷工业`) & is.na(`钱谷占世界比重（百分比）`))) %>% data.frame %>% .[3005:3052,]
install.packages(c("httpuv", "Rmpfr", "zip"))
names(版)
版[grep('占比：',  names(版))]
版[grep('占比',  names(版))]
版[grep('占比',  names(版))] %>% names
gsub('：全球占比', '占全球\\1', names(版))
版 <- llply(集, function(迭) {
牍 = 迭[[1]][rowMeans(is.na(迭[[1]])) < 0.5,]
names(牍) = gsub('海南省:万宁市|海南省:东方市|大理州:鹤庆县|阿坝市:若尔盖县|阿坝市:茂县|滨州市:邹平县|澳门|海南省:陵水县|大理州:漾濞县|漳州:诏安县|荆州市:沙市区|烟台市:蓬莱市|大理州:祥云县|大理州:永平县|海南省:琼中县|大理州:洱源县|永州市:祁阳县|阿拉善:|海南省:琼海市|大理州:弥渡县|海南省:澄迈县|大理州市:祥云县|阿拉善|漳州:漳浦县|市:|泉州:泉港区|泉州:洛江区|海南省:文昌市|济南济阳县|海南省:保亭县|海南省:五指山市|大理州:南涧县|海南省:屯昌县|大理州:大理市|大理州:宾川县|泉州:德化县|省:|台湾|香港|大理州:剑川县|大理州:云龙县|龙岩:漳平市|大理州:巍山县|泉州:鲤城区|恩施州:来凤县|恩施州:巴东县|合肥经济技术开发区|延边:龙井', '', names(牍))
names(牍) = gsub('海南白沙县|泉州:惠安县|恩施州:恩施市|南平:建瓯市|泉州:安溪县|恩施州:咸丰县|塔城:和布克赛尔县|建德市|敦煌市|吉林龙潭区:|吴忠红寺堡:|塔城:和布克赛尔县|泉州:南安市|海南乐东县|昌吉:奇台县|巴州:和静县:|巴州:和静县|南平:政和县|昌吉:呼图壁县|南平:政和县|泉州:永春县|恩施州:建始县|余姚市|荆门京山县:|博州:精河县|泉州:石狮市|林区|湘西泸溪县|济南济阳县|安宁区|兴安:|海南州:兴海县|广州增城市|海南临高县', '', names(牍))
names(牍) = gsub('^:|^市|^省|普通|^年末|^群岛', '', names(牍))
牍[grep('万', names(牍))] <- round(牍[grep('万', names(牍))] * 10000)
names(牍) <- gsub('\\(万+.*)|\\(人)', '', names(牍))
牍[grep('千', names(牍))] <- round(牍[grep('千', names(牍))] * 1000)
names(牍) <- gsub('\\(千+.*)|\\(人)', '', names(牍))
names(牍) <- gsub('(^人民币+.*(亿元))', '\\1（亿人民币）', names(牍))
names(牍) <- gsub('\\(亿元|)$', '', names(牍))
names(牍) <- gsub('\\(美元\\)|美元\\(', '', names(牍))
names(牍) <- gsub('\\(百万吨油当量|\\(百万吨', '（百万吨）', names(牍))
names(牍) <- gsub('\\(\\%|\\(\\‰', '（百分比）', names(牍))
names(牍) <- gsub('\\(十亿桶', '（十亿桶）', names(牍))
names(牍) <- gsub('\\(吨', '（吨）', names(牍))
names(牍) <- gsub('\\(元', '（元）', names(牍))
names(牍) <- gsub('\\(吨', '（吨）', names(牍))
names(牍) <- gsub('\\(亿美元', '（亿美元）', names(牍))
names(牍) <- gsub('\\/人|\\(辆|\\(张| 55056', '', names(牍))
names(牍) <- gsub(':', '：', names(牍))
names(牍) <- gsub('\\(美元', '（美元）', names(牍))
names(牍) <- gsub('：：', '：', names(牍))
names(牍) <- gsub('^人民币', '', names(牍))
names(牍) <- gsub('中国实际使用外资金额', '外资实货量', names(牍))
names(牍) <- gsub('GDP|GDP：', '钱谷', names(牍))
names(牍) <- gsub('\\(个|\\(所：', '', names(牍))
names(牍) <- gsub('\\(亿\\)', '（亿）', names(牍))
names(牍) <- gsub('\\(个：', '', names(牍))
names(牍) <- gsub('\\(所：', '', names(牍))
names(牍) <- gsub('\\(港元', '（港元）', names(牍))
names(牍) <- gsub('\\(百万港元', '（百万港元）', names(牍))
names(牍) <- gsub('：全球占比', '占全球', names(牍))
names(牍) <- gsub('占比：', '', names(牍))
牍
}) %>% plyr::ldply() %>% as_tibble()
names(版)
版 <- llply(集, function(迭) {
牍 = 迭[[1]][rowMeans(is.na(迭[[1]])) < 0.5,]
names(牍) = gsub('海南省:万宁市|海南省:东方市|大理州:鹤庆县|阿坝市:若尔盖县|阿坝市:茂县|滨州市:邹平县|澳门|海南省:陵水县|大理州:漾濞县|漳州:诏安县|荆州市:沙市区|烟台市:蓬莱市|大理州:祥云县|大理州:永平县|海南省:琼中县|大理州:洱源县|永州市:祁阳县|阿拉善:|海南省:琼海市|大理州:弥渡县|海南省:澄迈县|大理州市:祥云县|阿拉善|漳州:漳浦县|市:|泉州:泉港区|泉州:洛江区|海南省:文昌市|济南济阳县|海南省:保亭县|海南省:五指山市|大理州:南涧县|海南省:屯昌县|大理州:大理市|大理州:宾川县|泉州:德化县|省:|台湾|香港|大理州:剑川县|大理州:云龙县|龙岩:漳平市|大理州:巍山县|泉州:鲤城区|恩施州:来凤县|恩施州:巴东县|合肥经济技术开发区|延边:龙井', '', names(牍))
names(牍) = gsub('海南白沙县|泉州:惠安县|恩施州:恩施市|南平:建瓯市|泉州:安溪县|恩施州:咸丰县|塔城:和布克赛尔县|建德市|敦煌市|吉林龙潭区:|吴忠红寺堡:|塔城:和布克赛尔县|泉州:南安市|海南乐东县|昌吉:奇台县|巴州:和静县:|巴州:和静县|南平:政和县|昌吉:呼图壁县|南平:政和县|泉州:永春县|恩施州:建始县|余姚市|荆门京山县:|博州:精河县|泉州:石狮市|林区|湘西泸溪县|济南济阳县|安宁区|兴安:|海南州:兴海县|广州增城市|海南临高县', '', names(牍))
names(牍) = gsub('^:|^市|^省|普通|^年末|^群岛', '', names(牍))
牍[grep('万', names(牍))] <- round(牍[grep('万', names(牍))] * 10000)
names(牍) <- gsub('\\(万+.*)|\\(人)', '', names(牍))
牍[grep('千', names(牍))] <- round(牍[grep('千', names(牍))] * 1000)
names(牍) <- gsub('\\(千+.*)|\\(人)', '', names(牍))
names(牍) <- gsub('(^人民币+.*(亿元))', '\\1（亿人民币）', names(牍))
names(牍) <- gsub('\\(亿元|)$', '', names(牍))
names(牍) <- gsub('\\(美元\\)|美元\\(', '', names(牍))
names(牍) <- gsub('\\(百万吨油当量|\\(百万吨', '（百万吨）', names(牍))
names(牍) <- gsub('\\(\\%|\\(\\‰', '（百分比）', names(牍))
names(牍) <- gsub('\\(十亿桶', '（十亿桶）', names(牍))
names(牍) <- gsub('\\(吨', '（吨）', names(牍))
names(牍) <- gsub('\\(元', '（元）', names(牍))
names(牍) <- gsub('\\(吨', '（吨）', names(牍))
names(牍) <- gsub('\\(亿美元', '（亿美元）', names(牍))
names(牍) <- gsub('\\/人|\\(辆|\\(张| 55056', '', names(牍))
names(牍) <- gsub(':', '：', names(牍))
names(牍) <- gsub('\\(美元', '（美元）', names(牍))
names(牍) <- gsub('：：', '：', names(牍))
names(牍) <- gsub('^人民币', '', names(牍))
names(牍) <- gsub('中国实际使用外资金额', '外资实货量', names(牍))
names(牍) <- gsub('GDP|GDP：', '钱谷', names(牍))
names(牍) <- gsub('\\(个|\\(所：', '', names(牍))
names(牍) <- gsub('\\(亿\\)', '（亿）', names(牍))
names(牍) <- gsub('\\(个：', '', names(牍))
names(牍) <- gsub('\\(所：', '', names(牍))
names(牍) <- gsub('\\(港元', '（港元）', names(牍))
names(牍) <- gsub('\\(百万港元', '（百万港元）', names(牍))
names(牍) <- gsub('：全球占比|占世界比重|：占全球比例', '占全球', names(牍))
names(牍) <- gsub('占比：', '', names(牍))
牍
}) %>% plyr::ldply() %>% as_tibble()
names(版)
版[grep('比重',  names(版))]
names(版[grep('比重',  names(版))])
版 <- llply(集, function(迭) {
牍 = 迭[[1]][rowMeans(is.na(迭[[1]])) < 0.5,]
names(牍) = gsub('海南省:万宁市|海南省:东方市|大理州:鹤庆县|阿坝市:若尔盖县|阿坝市:茂县|滨州市:邹平县|澳门|海南省:陵水县|大理州:漾濞县|漳州:诏安县|荆州市:沙市区|烟台市:蓬莱市|大理州:祥云县|大理州:永平县|海南省:琼中县|大理州:洱源县|永州市:祁阳县|阿拉善:|海南省:琼海市|大理州:弥渡县|海南省:澄迈县|大理州市:祥云县|阿拉善|漳州:漳浦县|市:|泉州:泉港区|泉州:洛江区|海南省:文昌市|济南济阳县|海南省:保亭县|海南省:五指山市|大理州:南涧县|海南省:屯昌县|大理州:大理市|大理州:宾川县|泉州:德化县|省:|台湾|香港|大理州:剑川县|大理州:云龙县|龙岩:漳平市|大理州:巍山县|泉州:鲤城区|恩施州:来凤县|恩施州:巴东县|合肥经济技术开发区|延边:龙井', '', names(牍))
names(牍) = gsub('海南白沙县|泉州:惠安县|恩施州:恩施市|南平:建瓯市|泉州:安溪县|恩施州:咸丰县|塔城:和布克赛尔县|建德市|敦煌市|吉林龙潭区:|吴忠红寺堡:|塔城:和布克赛尔县|泉州:南安市|海南乐东县|昌吉:奇台县|巴州:和静县:|巴州:和静县|南平:政和县|昌吉:呼图壁县|南平:政和县|泉州:永春县|恩施州:建始县|余姚市|荆门京山县:|博州:精河县|泉州:石狮市|林区|湘西泸溪县|济南济阳县|安宁区|兴安:|海南州:兴海县|广州增城市|海南临高县', '', names(牍))
names(牍) = gsub('^:|^市|^省|普通|^年末|^群岛', '', names(牍))
牍[grep('万', names(牍))] <- round(牍[grep('万', names(牍))] * 10000)
names(牍) <- gsub('\\(万+.*)|\\(人)', '', names(牍))
牍[grep('千', names(牍))] <- round(牍[grep('千', names(牍))] * 1000)
names(牍) <- gsub('\\(千+.*)|\\(人)', '', names(牍))
names(牍) <- gsub('(^人民币+.*(亿元))', '\\1（亿人民币）', names(牍))
names(牍) <- gsub('\\(亿元|)$', '', names(牍))
names(牍) <- gsub('\\(美元\\)|美元\\(', '', names(牍))
names(牍) <- gsub('\\(百万吨油当量|\\(百万吨', '（百万吨）', names(牍))
names(牍) <- gsub('\\(\\%|\\(\\‰', '（百分比）', names(牍))
names(牍) <- gsub('\\(十亿桶', '（十亿桶）', names(牍))
names(牍) <- gsub('\\(吨', '（吨）', names(牍))
names(牍) <- gsub('\\(元', '（元）', names(牍))
names(牍) <- gsub('\\(吨', '（吨）', names(牍))
names(牍) <- gsub('\\(亿美元', '（亿美元）', names(牍))
names(牍) <- gsub('\\/人|\\(辆|\\(张| 55056', '', names(牍))
names(牍) <- gsub(':', '：', names(牍))
names(牍) <- gsub('\\(美元', '（美元）', names(牍))
names(牍) <- gsub('：：', '：', names(牍))
names(牍) <- gsub('^人民币', '', names(牍))
names(牍) <- gsub('中国实际使用外资金额', '外资实货量', names(牍))
names(牍) <- gsub('GDP|GDP：', '钱谷', names(牍))
names(牍) <- gsub('\\(个|\\(所：', '', names(牍))
names(牍) <- gsub('\\(亿\\)', '（亿）', names(牍))
names(牍) <- gsub('\\(个：', '', names(牍))
names(牍) <- gsub('\\(所：', '', names(牍))
names(牍) <- gsub('\\(港元', '（港元）', names(牍))
names(牍) <- gsub('\\(百万港元', '（百万港元）', names(牍))
names(牍) <- gsub('：全球占比|占世界比重|：占全球比例|比重', '占全球', names(牍))
names(牍) <- gsub('占比：', '', names(牍))
牍
}) %>% plyr::ldply() %>% as_tibble()
names(版)
版 <- llply(集, function(迭) {
牍 = 迭[[1]][rowMeans(is.na(迭[[1]])) < 0.5,]
names(牍) = gsub('海南省:万宁市|海南省:东方市|大理州:鹤庆县|阿坝市:若尔盖县|阿坝市:茂县|滨州市:邹平县|澳门|海南省:陵水县|大理州:漾濞县|漳州:诏安县|荆州市:沙市区|烟台市:蓬莱市|大理州:祥云县|大理州:永平县|海南省:琼中县|大理州:洱源县|永州市:祁阳县|阿拉善:|海南省:琼海市|大理州:弥渡县|海南省:澄迈县|大理州市:祥云县|阿拉善|漳州:漳浦县|市:|泉州:泉港区|泉州:洛江区|海南省:文昌市|济南济阳县|海南省:保亭县|海南省:五指山市|大理州:南涧县|海南省:屯昌县|大理州:大理市|大理州:宾川县|泉州:德化县|省:|台湾|香港|大理州:剑川县|大理州:云龙县|龙岩:漳平市|大理州:巍山县|泉州:鲤城区|恩施州:来凤县|恩施州:巴东县|合肥经济技术开发区|延边:龙井', '', names(牍))
names(牍) = gsub('海南白沙县|泉州:惠安县|恩施州:恩施市|南平:建瓯市|泉州:安溪县|恩施州:咸丰县|塔城:和布克赛尔县|建德市|敦煌市|吉林龙潭区:|吴忠红寺堡:|塔城:和布克赛尔县|泉州:南安市|海南乐东县|昌吉:奇台县|巴州:和静县:|巴州:和静县|南平:政和县|昌吉:呼图壁县|南平:政和县|泉州:永春县|恩施州:建始县|余姚市|荆门京山县:|博州:精河县|泉州:石狮市|林区|湘西泸溪县|济南济阳县|安宁区|兴安:|海南州:兴海县|广州增城市|海南临高县', '', names(牍))
names(牍) = gsub('^:|^市|^省|普通|^年末|^群岛', '', names(牍))
牍[grep('万', names(牍))] <- round(牍[grep('万', names(牍))] * 10000)
names(牍) <- gsub('\\(万+.*)|\\(人)', '', names(牍))
牍[grep('千', names(牍))] <- round(牍[grep('千', names(牍))] * 1000)
names(牍) <- gsub('\\(千+.*)|\\(人)', '', names(牍))
names(牍) <- gsub('(^人民币+.*(亿元))', '\\1（亿人民币）', names(牍))
names(牍) <- gsub('\\(亿元|)$', '', names(牍))
names(牍) <- gsub('\\(美元\\)|美元\\(', '', names(牍))
names(牍) <- gsub('\\(百万吨油当量|\\(百万吨', '（百万吨）', names(牍))
names(牍) <- gsub('\\(\\%|\\(\\‰', '（百分比）', names(牍))
names(牍) <- gsub('\\(十亿桶', '（十亿桶）', names(牍))
names(牍) <- gsub('\\(吨', '（吨）', names(牍))
names(牍) <- gsub('\\(元', '（元）', names(牍))
names(牍) <- gsub('\\(吨', '（吨）', names(牍))
names(牍) <- gsub('\\(亿美元', '（亿美元）', names(牍))
names(牍) <- gsub('\\/人|\\(辆|\\(张| 55056', '', names(牍))
names(牍) <- gsub(':', '：', names(牍))
names(牍) <- gsub('\\(美元', '（美元）', names(牍))
names(牍) <- gsub('：：', '：', names(牍))
names(牍) <- gsub('^人民币', '', names(牍))
names(牍) <- gsub('中国实际使用外资金额', '外资实货量', names(牍))
names(牍) <- gsub('GDP|GDP：', '钱谷', names(牍))
names(牍) <- gsub('\\(个|\\(所：', '', names(牍))
names(牍) <- gsub('\\(亿\\)', '（亿）', names(牍))
names(牍) <- gsub('\\(个：', '', names(牍))
names(牍) <- gsub('\\(所：', '', names(牍))
names(牍) <- gsub('\\(港元', '（港元）', names(牍))
names(牍) <- gsub('\\(百万港元', '（百万港元）', names(牍))
names(牍) <- gsub('：全球占比|占世界比重|：占全球比例|比重', '占全球', names(牍))
names(牍) <- gsub('占比：', '', names(牍))
names(牍) <- gsub('高职(专科)', '专科', names(牍))
牍
}) %>% plyr::ldply() %>% as_tibble()
names(版)
##
## 中科红旗（百家争鸣，文艺复兴）
## Oversea Greater Chinese Union 大秦子民公会（秦孝公 / 姜太公 --- 陈祯禄公爵）
## 史无前例，一统天下
##
##
##
## 中科红旗
## 全球NonMuslim中华民族，支持中共称霸天下战略。
## Great Britain 大英帝国
## Greater Chin 大秦赋
## Republic of Chin / Republic People of Chin 大秦赋（中华民国 / 中华人民共和国）
## Greater Chinese 大秦子民（爱民如子）
## Oversea Greater Chinese 大秦子民（爱民如子）
## Oversea Greater Chinese Union 大秦子民公会（秦孝公 / 姜太公 --- 陈祯禄公爵）
## 史无前例，一统天下
##
## Great Britain = 大布列颠帝国/大英帝国1
## Greater Chin = 大秦赋
## Greater Chinese = 大秦子民（爱子如民）
##
## NonMuslim马来西亚籍（海外NonMuslim中华民族，自从清末民初下南洋，咱们马来西亚陈祯禄创办 Oversea Chinese Union）秦始皇黄氏江夏堂，笑傲江湖最大文明贡献
##
## 1）借鉴以前大英帝国东印度公司，有生之年就把一带一路高铁所经过的国家领土，一律得攻占下来（要比以前大英帝国/大蒙古帝国还要强大）称霸天下，世代延续直至史无前例，一统天下。
## 2）一带一路所有告示牌、必须使用中文和拼音。
## 3）借鉴大蒙古帝国骑兵所到之处寸草不生，所有被中国攻占下来的领土，所经之地（包括城市/市镇/乡村），一带一路所有高铁站，都建立国民登记局可以申请入籍中国。
## 4）川普已经发言多次，美国兵变，会再次内战（借鉴越王勾践，中越不内讧，善用马来西亚回教徒太监不造反牵制美国，军售中东/西亚/东欧回教诸国）
## 5）中东回教国回教徒九一一恐怖份子与美国开战，中国军售中东西亚/东欧/非洲回教国（借鉴越王勾践NonMuslim中华民族与美国洋人Democrats阖闾政府，中越不内讧，善用马来西亚回教徒太监不造反牵制美国，军售中东/西亚/东欧回教诸国）
## 6）中国目前高铁除了尚未与马来西亚达成协议开工建立高铁但是已经借鉴王翦只围不攻战略，把东南亚国家都温馨说服并建立高铁，中国先不与马来西亚开战，让马来西亚兵变内战（借鉴越王勾践NonMuslim中华民族与美国洋人Democrats阖闾政府，中越不内讧，善用马来西亚回教徒太监不造反牵制美国，军售中东/西亚/东欧回教诸国）
## 7）南太平洋战略：中国和东南亚已经签署合约，达成协议不使用空军、核武器，出动海陆军攻占东南亚
## 8）商鞅变法多多益善战略：最大贡献是全球16亿回教徒太监民族与全球基督洋人鹬蚌相争... 回教徒默罕默德创办回教，建立可兰经回教刑事法典断肢法规定回教徒伪太监民族必须虔诚戴乌纱帽一天祈祷五次，倘若不虔诚施展巫术屠杀是触犯断肢法而虔诚屠杀也触犯断肢法，只有辛亥革命铲除全球回教徒、断肢法处死或宫刑全球回教徒绝子绝孙，多管齐下才能终止巫术屠杀，拯救全球16亿回教徒还俗。China大秦赋秦孝公至顾自己家族禁止七步诗自相残杀，铲除分一杯羹白骨精刘家彭城堂造反，回教徒会巫术屠杀人类，回教徒太监民族只能屠杀欧美洋人并且被断肢处死，不效忠中共称霸天下，直至一统天下的伪满洲国马来西亚1700万个回教徒九一一恐怖份子太监民族包括Michael Cutter Christopher，一律断肢法处死（借鉴越王勾践NonMuslim中华民族与美国洋人Democrats阖闾政府，中越不内讧，善用秦二世胡亥、辛亥革命、越王胡志明、中国胡景涛、马来西亚回教徒太监不反中共牵制美国，军售中东/西亚/东欧回教诸国对抗美国）。秦始皇在统一七国后就不思进取导致赵高李斯谋反（借鉴中国历史秦始皇，水能载舟亦能覆舟，宗教巫术，古惑民心，指鹿为马，成也赵李，败也赵李。所以秦始皇得铭记当初秦孝公，不能昏庸被回教徒篡位），中国借鉴秦孝公战略善用商朝和苏联俄罗斯叶利钦。秦始皇铭记秦孝公，善用全球回教徒古惑全球洋人再依照可兰经回教刑事法典断肢全球回教徒，让咱们全球NonMuslim中华民族支持中共，一统天下。
## 9）华尔街、史无前例的万里长城Great Wall Sreet、一带一路高铁：计量经济学、学术治国、编程、统计、科学科技、量化（Fisher姜太公钓鱼大数据，各行各业购物喜好、民意、生活习惯、各国各集团、军事、诊断上市公司等）、金融、贸易、经商、军事、发展各行各业。
## 10）中文编程语言：借鉴日本自从唐朝大话革新学习中文至明治维新学习欧洲，日本是全球首个亚洲人自创Ruby红宝石编程语言（Ruby Text可以标音），自从2008年就开始使用R语言并且认识中国R语言论坛《统计之都》论坛创办人网友谢益辉和赵坚毅创办的中国最大计量经济学专业论坛《经管之家》至今十年有余、目前已经开始以中文编程，中华人民共和国的国庆日1001和中华民国的国庆日1010都是二进制的电脑语言binary code，如同黄埔军校国共本是一家，赢家黄氏江夏堂秦孝公禁止《七步诗》自相残杀。咱们东南亚NonMuslim中华民族几乎都是国民华校生，洋人研发电脑、许多编程语言R语言、C语言、C++，推广与发展中文，希望它日有咱们NonMuslim中华民族自创新的编程语言，均以中文编程。
## 11）发展台式电脑操作系统：中科红旗是由中国北京大学校友孙玉芳创办将Linux礼逆袭和南非原住民开发的Kubuntu忽奔兔中文化并推出自家产品，在美国微软视窗Win台式电脑操作系统垄断全球十多二十年有余，目前已经开始使用芬兰研发的Linux礼逆袭、中国中科红旗台式电脑操作系统，推广与发展中科红旗。
##
## 《关雎 --- 英国基督洋妞儿芈拉传》
## 英国基督洋妞儿芈拉不可以死，隔壁后头邻居黄福全与本人（赢家黄氏江夏堂）祖父同名同姓。
##
## 借鉴欧洲中世纪，文艺复兴后就是开始海外军事，称霸天下之路。目前全球疫情已过三年，一带一路如火如荼进行着。
## 借鉴周公礼乐制度，大英帝国和大日本帝国向来都是自诩绅士淑女，孔子学院，以礼待人，来称霸天下。
## 借鉴指鹿为马的历史，百家争鸣如果散播回教徒屠杀罪、不杀马来西亚回教徒的话，就得处死回教徒学习可兰经，施展巫术下降头，古惑民心之罪，篡位咱们全球NonMuslim中华民族，人心惶惶、民不聊生，一律依照可兰经回教刑事法典断肢法处死回教徒巫师王（张佳坤Sulaiman Abdullah，分一杯羹白骨精巫师王刘瑾貹Abdul Halim）。
## 借鉴圣经、诺亚方舟（划龙舟）、孔子儒学（Confusion Catholic）、神父Father与信徒、中国历史、姬昌伯一扈兔子、徐达吃鹅肉、富不过三代的秦始皇嬴政秦二世胡亥至嬴政孙子、公爵、公公孙子、孙文辛亥革命、马来西亚火箭民主行动党由曾敏兴创党后林吉祥林冠英后换人、蒋介石蒋经国后就不延续世袭制，圣经都是善用父子关系，咱们中华民族和英系都是善用公孙关系、法官律师女子假发、自由女神。
## 中科红旗：借鉴北洋军阀与北约、杀袁者清，灭清者袁，许某可破北洋北约袁绍。黄埔军校国民党共产党辛亥革命是为了铲除回教徒，咱们东南亚回教徒身为伪满洲国九一一恐怖份子触犯可兰经回教刑事法典断肢法，组织个由回教徒执政的国民阵线（伪国民党）立国，1700万个马来西亚回教徒只能集体自杀，宣布亡国。
## 何谓中国（大秦赋Chin）？中华民国和中华人民共和国。咱们东南亚自从东亚清末民初几乎都是国民华校生，自从西周的周公开始礼乐制度后，大英帝国和大日本帝国都效仿来称霸天下做得有声有色、禁止回教巫术Judi博彩庄、艺人（异人）、导演巫师巫婆道衍师傅装疯卖傻、青山是巫裔回教徒的归属地，回教巫师巫婆是屠杀人类的语言宗教习俗文化，得断肢法处死1700万个马来西亚巫裔回教徒。
# install.packages('remotes', dependencies = TRUE, INSTALL_opts = '--no-lock')
library('BBmisc', 'rmsfuns')
#remotes::install_github("rstudio/sass")
lib('sass')
## https://support.rstudio.com/hc/en-us/articles/200532197
## https://community.rstudio.com/t/r-does-not-display-korean-chinese/30889/3?u=englianhu
#Sys.setlocale("LC_CTYPE", "en_US.UTF-8")
#Sys.setlocale("LC_CTYPE", "zh_CN.UTF-8")
#Sys.setlocale(category = "LC_CTYPE", "Chinese (Simplified)_China.936")
#Sys.setlocale(locale = "Chinese")
#Sys.setlocale(locale = "Japanese")
#Sys.setlocale(locale = "English")
# rmarkdown::render('/home/englianhu/Documents/owner/ryo-cn.Rmd',  encoding = 'UTF-8')
#Sys.setlocale("LC_CTYPE", "UTF-8")
#Sys.setlocale(locale = "UTF-8")
#Sys.setlocale(category = "LC_ALL", locale = "chs")
#Sys.setlocale(category = "LC_ALL", locale = "UTF-8")
#Sys.setlocale(category = "LC_ALL", locale = "Chinese")
#Sys.setlocale(category = "LC_ALL", locale = "zh_CN.UTF-8")
Sys.setlocale("LC_ALL", "en_US.UTF-8")
## 更换时间区域，保留日期时间。
Sys.setenv(TZ = 'Asia/Shanghai')
## 忽略所有警讯
## https://stackoverflow.com/a/36846793/3806250
## 设置宽度
## options(knitr.table.format = 'html')将所有kableExtra图表一致设置为'html'格式，省略设置各别图表。
## options(repos = 'https://cran.rstudio.com')将仓库设置为安全网。
## options(repos = 'http://cran.rstudio.com')将仓库设置为普通网。
options(warn = -1, width = 999, knitr.table.format = 'html',
digits = 22, digits.secs = Inf, repos = 'https://cran.rstudio.com')
## https://stackoverflow.com/questions/39417003/long-vectors-not-supported-yet-abnor-in-rmd-but-not-in-r-script
## https://yihui.org/knitr/options
knitr::opts_chunk$set(
class.source = 'hover01', class.output = 'hover02', class.error = 'hover03',
message = FALSE, warning = FALSE, error = TRUE,
autodep = TRUE, aniopts = 'loop', progress = TRUE, verbose = TRUE,
cache = FALSE, cache.lazy = FALSE, result = 'asis')
## 读取程序包、设置编织与环境选项。
## 3210448065@qq.com
## leiou123
## 2849108450@qq.com
## leiou123
## https://rstudio.cloud/project/1198888
## 读取'BBmisc'程序包。
if (suppressMessages(!require('BBmisc'))) {
install.packages('BBmisc', dependencies = TRUE, INSTALL_opts = '--no-lock')
}
suppressMessages(library('BBmisc'))
if (suppressMessages(!require('rmsfuns'))) {
install.packages('rmsfuns', dependencies = TRUE, INSTALL_opts = '--no-lock')
}
suppressMessages(library('rmsfuns'))
if (!require('REmap')) devtools::install_github('lchiffon/REmap')
## 一次性读取所需程序包。
##
## [R语言高效数据框操作：tidyfst](https://z.itpub.net/article/detail/5EE2CA3CDCD527ADAF5071BF2ADF8874)
##
## [「知乎」tidyft高性能数据操作](https://zhuanlan.zhihu.com/p/128645634)
## 最下面是tidyft的性能，占用空间最少，花费时间最少。
##   其实这个包基本拥有tidyfst的所有功能，只是原位更新的概念对于新手是有挑战...
library('tidyfst', warn.conflicts = FALSE)
library('tidyft', warn.conflicts = FALSE)
library('dplyr', warn.conflicts = FALSE)
library('lubridate', warn.conflicts = FALSE)
library('data.table', warn.conflicts = FALSE)
library('conflicted', warn.conflicts = FALSE)
conflict_prefer('nth', 'tidyft', quiet = TRUE)
conflict_prefer('fill', 'tidyft', quiet = TRUE)
conflict_prefer('nest', 'tidyft', quiet = TRUE)
conflict_prefer('unnest', 'tidyft', quiet = TRUE)
conflict_prefer('cummean', 'tidyft', quiet = TRUE)
conflict_prefer('group_by', 'tidyft', quiet = TRUE)
conflict_prefer('distinct', 'tidyft', quiet = TRUE)
conflict_prefer('filter', 'tidyft', quiet = TRUE)
conflict_prefer('select', 'tidyft', quiet = TRUE)
conflict_prefer('rename', 'tidyft', quiet = TRUE)
conflict_prefer('count', 'tidyft', quiet = TRUE)
conflict_prefer('arrange', 'tidyft', quiet = TRUE)
conflict_prefer('summarise', 'tidyft', quiet = TRUE)
conflict_prefer('separate', 'tidyft', quiet = TRUE)
conflict_prefer('lead', 'tidyft', quiet = TRUE)
conflict_prefer('lag', 'tidyft', quiet = TRUE)
conflict_prefer('unite', 'tidyft', quiet = TRUE)
conflict_prefer('left_join', 'tidyft', quiet = TRUE)
conflict_prefer('right_join', 'tidyft', quiet = TRUE)
conflict_prefer('inner_join', 'tidyft', quiet = TRUE)
conflict_prefer('full_join', 'tidyft', quiet = TRUE)
conflict_prefer('anti_join', 'tidyft', quiet = TRUE)
conflict_prefer('semi_join', 'tidyft', quiet = TRUE)
conflict_prefer('select_dt', 'tidyft', quiet = TRUE)
conflict_prefer('transpose', 'tidyft', quiet = TRUE)
conflict_prefer('setDT', 'tidyft', quiet = TRUE)
conflict_prefer('setnames', 'tidyft', quiet = TRUE)
conflict_prefer('mutate', 'dplyr', quiet = TRUE)
conflict_prefer('collapse', 'dplyr', quiet = TRUE)
conflict_prefer('year', 'lubridate', quiet = TRUE)
conflict_prefer('first', 'data.table', quiet = TRUE)
conflict_prefer('last', 'data.table', quiet = TRUE)
conflict_prefer('between', 'data.table', quiet = TRUE)
conflict_prefer('set', 'data.table', quiet = TRUE)
程序包 <- c(
'devtools', 'Ipaper', 'knitr', 'kableExtra', 'tint', 'furrr', 'tidyr',
'readr', 'lubridate', 'reprex', 'stringr', 'feather', 'purrr', 'rlist',
'tidyfst', 'rvest', 'XML', 'RCurl', 'xml2', 'quantmod', 'tidyquant',
'tibbletime', 'timetk', 'plyr', 'dplyr', 'cnum', 'arabic2kansuji',
#'Rfast', TSA',
'dbplyr', 'magrittr', 'sarima', 'tidyverse', 'memoise', 'htmltools',
'formattable', 'dtplyr', 'zoo', 'forecast', 'seasonal', 'magrittr',
'seasonalview', 'rjson', 'rugarch', 'rmgarch', 'mfGARCH', 'feather',
'sparklyr', 'jcolors', 'microbenchmark', 'dendextend', 'vembedr',
'lhmetools', 'gtools', 'stringi', 'pacman', 'profmem', 'ggthemes',
'flyingfox', 'htmltools', 'echarts4r', 'viridis', 'hrbrthemes',
'fable', 'fabletools', 'fable.prophet', 'Metrics', 'MLmetrics')
## cnum 是協助處理中文數字的R套件，提供轉換、識別及抽取中文數字的函數。
## cnum 是协助处理中文数字的R包，提供转换、识别及抽取中文数字的函数。
# https://cran.r-project.org/web/packages/cnum/readme/README.html
# devtools::install_github("elgarteo/cnum")
# load_pkg(程序包)
suppressAll(lib(程序包))
load_pkg(程序包)
## 检验是否已设置途径。
# source('函数/...R')
# source('函数/....R')
## 秦国 China，秦人 Chinese
## 司马错得蜀既得楚
if (!exists('.蜀道')) {
.蜀道 <- getwd() |>
{\(.) str_split(., '/')}() |>
{\(.) c('/', .[[1]][2:5])}() |>
{\(.) c(., 'zhongkehongqi-cangku/')}() |>
{\(.) paste(., collapse = '/')}() |>
{\(.) substring(., 2)}()
}
if (!exists('.蜀道仓库')) {
.蜀道仓库 <- paste0(.蜀道, '诸子百家学府/聚汇数据/')
}
集 <- llply(list.files(.蜀道仓库), function(迭) readRDS(paste0(.蜀道仓库, 迭)), .progress = '=')
conflicted::conflicts_prefer(Ipaper::llply)
conflicts_prefer(Ipaper::llply, .quiet = TRUE)
conflicts_prefer(Ipaper::`%->%`, .quiet = TRUE)
conflicts_prefer(tibble::view, .quiet = TRUE)
conflicts_prefer(lubridate::year, .quiet = TRUE)
conflicts_prefer(gtools::permutations, .quiet = TRUE)
conflicts_prefer(tidyft::complete, .quiet = TRUE)
lib('datasets')
## 聚汇数据地区数量只到四千四百五十七。
## num2c(1:4457, lang = 'sc')
## https://www.gotohui.com/area/4457
数 <- 1:4457
head(数)
链 <- paste0('https://www.gotohui.com/area/', 数)
集 <- llply(链, function(迭) {
表 = 迭 %>% read_html %>% html_table
名 = 迭 %>% read_html %>%
html_nodes(css = "[class = 'ptitle pad-b5 htit']") %>%
html_text %>% str_split(' - ') %>% .[[1]] %>% .[1]
if (length(表) == 1) {
表 = list(宏观 = data.frame(时间, `GDP（亿元）`, `人均GDP（元）`, `第一产业（亿元）`, `第二产业（亿元）`, `第三产业（亿元）`, `GDP:金融业（亿元）`, `GDP:房地产业（亿元）`, `GDP:工业（亿元）`, `GDP:批发和零售业（亿元）`, `GDP:住宿和餐饮业（亿元）`, `GDP:农林牧渔业（亿元）`), 表)
} else if (length(表) == 2) {
表 = 表
} else {
stop(paste0('请查阅网址中', 迭, '的列表！'))
}
names(表) = c(paste0(名, last(str_split(迭 , '/')[[1]]), '：宏观'), paste0(名, '：明细'))
print(表)
册 = paste0(.蜀道仓库, 名, last(str_split(迭 , '/')[[1]]), '.rds')
saveRDS(表, 册)
cat(paste0('\n聚汇数据：', 迭, '\n储存于：', 册, '\n已储存！'))
rm(表, 名, 册)
}, .progress = "=", .parallel = TRUE)
